#ip 4
Register:
0 1 2 3 4  5
A B C D IP F

00 addi 4 16 4  IP ← IP + 16
    GOTO START

PART1:
01 seti 1 2 3   D ← 1

SKIP6:
02 seti 1 6 1   B ← 1

SKIP4:
03 mulr 3 1 2   C ← D * B
04 eqrr 2 5 2   C ← C == F
    IF C == F GOTO SKIP1 ELSE GOTO SKIP2
05 addr 2 4 4   IP ← C + IP
06 addi 4 1 4   IP ← IP + 1

SKIP1:
07 addr 3 0 0   A ← D + A

SKIP2:
08 addi 1 1 1   B ← B + 1
09 gtrr 1 5 2   C ← B > F
    IF B > F GOTO SKIP3 ELSE GOTO SKIP4
10 addr 4 2 4   IP ← IP + C
11 seti 2 8 4   IP ← 2
SKIP3:
12 addi 3 1 3   D ← D + 1
13 gtrr 3 5 2   C ← D > F
    IF D > F GOTO SKIP5 ELSE GOTO SKIP6
14 addr 2 4 4   IP ← C + IP
15 seti 1 4 4   IP ← 1
SKIP5:
16 mulr 4 4 4   IP ← IP * IP
    EXIT
START:
17 addi 5 2 5   F ← F + 2
18 mulr 5 5 5   F ← F * F
19 mulr 4 5 5   F ← IP * F
20 muli 5 11 5  F ← F * 11
    F ← (F+2)^2 * 19 * 11
      ← 836 (On first pass)
21 addi 2 5 2   C ← C + 5
22 mulr 2 4 2   C ← C * IP
23 addi 2 18 2  C ← C + 18
    C ← (C + 5) * 22 + 18
      ← 128 (On first pass)
24 addr 5 2 5   F ← F + C
    F ← F + C
      ← 964 (On first pass)

25 addr 4 0 4   IP ← IP + A
    PART 1 → GOTO PART1
    PART 2 → GOTO PART2
26 seti 0 6 4   IP ← 0

PART2:
27 setr 4 8 2   C ← IP
28 mulr 2 4 2   C ← C * IP
29 addr 4 2 2   C ← IP + C
30 mulr 4 2 2   C ← IP * C
31 muli 2 14 2  C ← C * 14
32 mulr 2 4 2   C ← C * IP
    C ← (27 * 28 + 29) * 30 * 14 * 32
      ← 10550400
33 addr 5 2 5   F ← F + C
    F ← F + C
      ← 10551364 (On first pass)
34 seti 0 1 0   A ← 0
    A ← 0
35 seti 0 5 4   IP ← 0
    GOTO PART1
